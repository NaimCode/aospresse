// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String   @unique
  email     String?
  image     String?
  password  String
  isActif   Boolean  @default(true)
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          String  @id @default(cuid())
  name        String  @unique
  description String?
  color       String?
  icon        String?

  servicesChild Service[] @relation(name: "categorieChild")
  servicesAdult Service[] @relation(name: "categorieAdult")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Adherent {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //
  sexe          Sexe
  dateNaissance String?
  lieuNaissance String?

  tel String?

  email        String?
  profession   String?
  lieuTravail  String?
  cin          String?
  identifiant  String?
  anneeTravail String?

  dateAbonnement String?
}

model Service {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  forChild String?
  forAdult String?

  activiteChild String?
  activiteAdult String?

  categorieIdChild String
  categorieIdAdult String

  categorieChild Category @relation(fields: [categorieIdChild], references: [id], name: "categorieChild")

  categorieAdult Category @relation(fields: [categorieIdAdult], references: [id], name: "categorieAdult")
}

enum Sexe {
  M
  F
}
